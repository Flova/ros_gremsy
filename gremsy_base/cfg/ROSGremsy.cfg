#!/usr/bin/env python3
# configuration

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("device", str_t, 0, "Serial device for the gimbal connection", None)
gen.add("baudrate", int_t, 0, "Baudrate for the gimbal connection", None)
gen.add("state_poll_rate", double_t, 0, "Rate in which the gimbal data is polled and published", min=0.0, max=300.0)
gen.add("goal_push_rate", double_t, 0, "Rate in which the gimbal are pushed to the gimbal", min=0.0, max=300.0)
gen.add("gimbal_mode", int_t, 0, "Control mode of the gimbal", min=0, max=2)

gen.add("tilt_axis_input_mode", int_t, 0, "Input mode of the gimbals tilt axis", min=0, max=2)
gen.add("tilt_axis_stabilize", bool_t, 0, "Input mode of the gimbals tilt axis", None)
gen.add("roll_axis_input_mode", int_t, 0, "Input mode of the gimbals tilt roll", min=0, max=2)
gen.add("roll_axis_stabilize", bool_t, 0, "Input mode of the gimbals tilt roll", None)
gen.add("pan_axis_input_mode", int_t, 0, "Input mode of the gimbals tilt pan", min=0, max=2)
gen.add("pan_axis_stabilize", bool_t, 0, "Input mode of the gimbals tilt pan", None)
gen.add("lock_yaw_to_vehicle", bool_t, 0, "Uses the yaw relative to the gimbal mount to prevent drift issues. Only a light stabilization is applied.", None)

exit(gen.generate("gremsy_base", "gremsy_base", "ROSGremsy"))
